name: Lint
on:
  workflow_call:
    inputs:
      solution:
        description: Solution to run linting against
        required: true
        type: string

jobs:
  quality:
    name: Quality
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
      GITHUB_USERNAME: GitHub
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/checkout@v3

      - name: Cache SonarCloud Packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud Scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          $key = "${{ github.repository	}}".Replace("/", "_")

          .\.sonar\scanner\dotnet-sonarscanner begin `
            /o:orthofi `
            /k:$key `
            /d:sonar.host.url=https://sonarcloud.io `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

          dotnet build ${{ inputs.solution }} -v q

          .\.sonar\scanner\dotnet-sonarscanner end `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
